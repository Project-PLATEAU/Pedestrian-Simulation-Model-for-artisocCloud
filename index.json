{
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation!"
  },
  "articles/AgentDataPreparation.html": {
    "href": "articles/AgentDataPreparation.html",
    "title": "参考：エージェントデータの生成方法 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "参考：エージェントデータの生成方法 ここでは、歩行シミュレーションに用いたエージェント情報の生成方法の概要を記載します。 生成方法 エージェント情報として、下記内容を含むcsvデータを用意します。 エージェントID 出発時間 エージェント属性 エージェントが出発するノードID エージェントが目的地とするノードID なお、本業務では、エージェントのOD交通量（どこからどこまで、どれくらいの人数が移動するか）の取得において、「KDDI Location Analyzer」を使用しています。 また、エージェントの発生時刻、エージェントの属性について、第6回東京都市圏パーソントリップ調査から取得したデータを参考にしています。"
  },
  "articles/ArtisocCloudReference.html": {
    "href": "articles/ArtisocCloudReference.html",
    "title": "参考：artisoc Cloudについて | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "参考：artisoc Cloudについて artisoc Cloudは、MAS（マルチエージェント・シミュレーション）をWebブラウザ上で手軽に実行・共有できるほか、クラウド上での大量同時実行などの機能を使った高い拡張性を有するソフトウェアです。 MAS（マルチエージェント・シミュレーション） 個々のエージェントが独自のルールを持って行動し、相互作用した結果を分析する、複雑系をコンピュータ上で分析するシミュレーションです。 エージェント：自分の周囲の状況を認識し、それに基づいて、一定のルールのもとで自律的に行動する主体のことです。現実社会では、人間や生物がエージェントに該当します。 複雑系：複雑系は、多数の相互作用する要素（エージェント、プロセス等）によって構成され、全体の挙動が個々の挙動の単純な足し合わせでは導出できないものです。例えば、鳥の群れや、高速道路での自然渋滞などが該当します。 artisoc Cloudのライセンス artisoc Cloudは3つのライセンス（player/academic/standard）があります。各ライセンスで使用可能な機能は次の表のとおりです。 （※）各ライセンスで使用可能なライブラリは、artisoc Cloudで利用できるライブラリに記載しています。 なお、standardライセンスは有料ライセンス、academic/playerライセンスは無料ライセンスとなります。詳しくはartisoc Cloudの概要をご覧ください。 artisoc Cloudに関する参考資料 artisoc Cloudの概要 artisoc Cloudの特徴、ライセンス等を整理したページです。 artisoc Cloud初級チュートリアル artisoc Cloudの使い方を、パワーポイントや動画を使ったチュートリアルとしてまとめています。 artisoc Cloudドキュメント：チュートリアル artisoc Cloudの実践的なチュートリアルをまとめたドキュメントです。 artisoc Cloudドキュメント：マニュアル artisoc Cloudを実際に使う際に参照するマニュアルです。 artisoc Cloud artisoc Cloudのトップページです。 artisoc Cloudで利用できるライブラリ artisoc Cloudで利用できるpythonライブラリをまとめています。"
  },
  "articles/Installation.html": {
    "href": "articles/Installation.html",
    "title": "インストール方法 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "インストール方法 ここでは、artisoc Cloud standardライセンスにおけるモデルの使用方法として、歩行シミュレーションのソースコード編集のためのファイルインストール方法を記載します。 動作環境、前提ソフトウェア、必要ライセンス 動作環境 artisoc Cloudのインストールが閲覧に必要となります。 artisoc Cloudの使用マニュアルは、artisoc Cloudログイン後、取得することが可能です。 また、artisoc Cloudのチュートリアル資料をWeb上に公開していますので、併せてご参照ください。 必要ライセンス artisoc Cloud standardライセンス 本モデルのソースコードの閲覧、編集、実行が可能です。 standardライセンスでは、下記表赤枠内の機能を使用できます。 （※）各ライセンスで使用可能なライブラリは、artisoc Cloudで利用できるライブラリに記載しています。 参考資料 artisoc Cloud HP(https://mas.kke.co.jp/artisoccloud/) インストール手順 本リポジトリ内のあるファイル一式を「Code」> 「Download Zip」からダウンロードします。 ダウンロードされた「PLATEAU-UC22-023-Pedestrian-Simulation-Model.zip」ファイルを解凍し、「model.json」ファイルを取得します。 artisoc Cloudにアクセスします。 右上の「ログイン」ボタンから、ログインを行います。 ログイン後、右上のボタンから「モデルをアップロード」を選択します。その後、モデルをアップロードできる画面に移るので、ドラッグアンドドロップにより、取得した「model.json」ファイルをアップロードします。これにより、インストール完了となります。 なお、シミュレーションモデルの実行のみであれば、artisoc Cloud 西新宿シミュレーションモデルにアクセスすることでも可能です。"
  },
  "articles/InstallationPlayer.html": {
    "href": "articles/InstallationPlayer.html",
    "title": "インストール方法 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "インストール方法 ここでは、artisoc Cloud academic/playerライセンスにおけるモデルの使用方法を記載します。 動作環境、前提ソフトウェア、必要ライセンス 動作環境 artisoc Cloudのインストールが閲覧に必要となります。 artisoc Cloudの使用マニュアルは、artisoc Cloudログイン後、取得することが可能です。 また、artisoc Cloudのチュートリアル資料をWeb上に公開していますので、併せてご参照ください。 必要ライセンス artisoc Cloud academicライセンス、playerライセンス 本モデルはstandardライセンスで作成されたモデルであるため、モデルを実行することのみが可能です。 本モデルのソースコードの閲覧自体は、model_files>model>universe あるいはmodel_files>model>modules内にあるpythonファイルから確認可能です。ただし、ソースコードはartisoc Cloud専用でのソースコードとなっており、pythonファイルをそのまま実行しても動作しないものとなります。 academicライセンス、playerライセンスでは、下記表赤枠内の機能を使用できます。 （※）各ライセンスで使用可能なライブラリは、artisoc Cloudで利用できるライブラリに記載しています。 参考資料 artisoc Cloud HP(https://mas.kke.co.jp/artisoccloud/) インストール手順 artisoc Cloudにアクセスします。 右上の「ログイン」ボタンから、ログインを行います。 artisoc Cloud 西新宿シミュレーションモデルにアクセスします。"
  },
  "articles/NetworkConversion.html": {
    "href": "articles/NetworkConversion.html",
    "title": "参考：歩行ネットワークデータの生成方法 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "参考：歩行ネットワークデータの生成方法 ここでは、歩行シミュレーションに用いた歩行ネットワークデータの生成方法の概要を記載します。 生成方法 3D都市モデルデータから、車道・歩道等のLOD1に該当するデータを抽出し、JSONデータ（道路外形を表すポリゴンデータ）とします。 本業務ではPythonでXML解析を行います。 gml: boundedByにて、「ObjectType」として以下のいずれかに定義されているオブジェクトを取得します。 Road（道路） Sidewalk（歩道） 取得したオブジェクトのgml: LinearRingより、各ポリゴンの端点のx、y、z座標を取得します。（下記図はJSONデータイメージ） 取得した座標をジオメトリ情報として格納し、jsonファイルを生成します。（下記図はJSONをQGISで表示したイメージ） JSONファイルをもとに、下記手順で道路枠線データを抽出し、歩行ネットワークを構成するリンクデータ、ノードデータ（いずれもshpデータ）を出力します。 QGISの「プロセシングツール」内のツールを使用します。（下記図は出力されたリンクデータ、ノードデータをQGISで可視化したイメージ） 「融合（dissolve）」：インプットデータはJSONファイルです。 「ポリゴンを線に変換」 「ジオメトリの簡素化」 「線をセグメントに分解」：リンクデータが出力されます。 「頂点の抽出」：ノードデータが出力されます。 横断歩道、階段、歩車共存道路の情報を手動補完し、不自然な道路横断がおこならないようにノード位置の微修正を行います。 QGIS上で地物の編集を行います。 横断歩道、階段、歩車共存道路の有無をGoogle Mapsで確認します。 抽出されたリンクデータにはないデータを、QGISの「スナップオプション機能」を使用し、「線の地物を追加」でリンクを生成します。 横断歩道周辺のノードを、QGISの「地物の移動」を利用して調整します。 歩行ネットワーク上の、横断歩道に設置された歩行者用の信号の有無の情報を補完します。 QGIS上で属性を直接編集します。 ネットワーク上の各リンクに接続する横断歩道に設置された歩行者用の信号の有無をGoogle Mapsで確認します。 リンクデータに対して、QGIS上で属性テーブルを開き、横断歩道や信号の有無のデータを付与します。 イベント実施に関するデータを、ノードデータに付与します。 QGIS上でデータを付与します。 下記情報を含むcsvデータを用意します。 node_id：イベントが実施されるノードのID x, y, z：イベントが実施されるノードの位置座標 attractor：イベントの実施規模（面積） signage：広告の有無（広告がない場合は0、広告がある場合は1 「属性テーブルで結合（table join）」機能により、ノードデータに対して、上記csvのデータを付与します。 歩行モデルに使用する視野の情報として、平面上の可視範囲を計算し、リンクデータに付与します。 QGISの「プロセシングツール」内の機能を下記手順で使用します。 「ウェッジバッファを作成」 「ウェッジバッファ」とは、ある点から楔形（扇形）に生成されるバッファのことです。 パラメータは下記のように設定します。 「方位角」：リンク端点から次のノードへの仰角 「ウェッジ幅」：170度 「外形」：リンク長 「切り抜く（clip）」：JSONファイルとウェッジバッファの重なり部分を抽出します。 「ジオメトリ属性を追加」：重なり部分の面積を算出します。 「属性テーブルで結合」：リンクデータに情報を付与します。 各リンクの始点のノードの位置における上空の建物（床面）の有無をリンクデータに付与します。 QGIS上で属性を直接編集します。 3D都市モデル（CityGML）を閲覧できるビューワー（本業務ではFZK Viewerを使用）にて、ネットワーク上の各ノード位置において上空に建物（床面）があるかを目視で確認します。 リンクデータに対して、QGIS上で属性テーブルを開き、床面の有無の情報を付与します。 床面がある場合は0、床面がある場合は1を入力します。 視界情報を計算し、リンクデータに情報を付与します。 上記の手順により生成されたshpデータをcsvデータに出力します。 QGIS上で、ノードデータ、リンクデータに対して、「エクスポート」>「新規ファイルに地物を保存」を行います。 ノードデータを「network_node.csv」、リンクデータを「network_link.csv」とします。これらのデータを、artisoc Cloudに読み込んでいます。 ノードデータのカラムは次のとおりです。 node_id：ノードのID x, y, z：ノードの位置座標 attractor：アトラクタの強さ（イベント実施規模） signage：広告有無（0：広告なし、1：広告あり） リンクデータのカラムは次のとおりです。 link_id：リンクのID from_node_id：リンクの始点ノードのID to_node_id：リンクの終点ノードのID visible_area：視界情報 floor：階数情報 z：リンクの始点のz座標 path：横断歩道、信号等の有無"
  },
  "articles/SimulationExecution.html": {
    "href": "articles/SimulationExecution.html",
    "title": "歩行シミュレーション実行 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "歩行シミュレーション実行 ここでは、歩行シミュレーションモデルを実行するための方法を記載します。 実行手順 シミュレーション実行条件を設定後、シミュレーション実行ボタンを押し、シミュレーションを実行します。 シミュレーション実行完了後、エージェントの行動ログ（csvファイル）が取得できます。 行動ログはシミュレーション時間で10分ごとに出力されます。 csvファイル名は「agent_log_（時）.0（分）.00.0.csv」となります。 （時）、（分）はログが出力される時間が記載されます。 例えば、8時10分までのログであれば、（時）= 8、（分）= 10 となります。 例えば、午前8時から午前9時までの実行とした場合、下記6ファイルが出力されます。 agent_log_8.010.00.0.csv（8時～8時10分のログ） agent_log_8.020.00.0.csv（8時10分～8時20分のログ） agent_log_8.030.00.0.csv（8時20分～8時30分のログ） agent_log_8.040.00.0.csv（8時30分～8時40分のログ） agent_log_8.050.00.0.csv（8時40分～8時50分のログ） agent_log_9.000.00.0.csv（8時50分～9時のログ） 行動ログの内容は下記の通りです。 agent_id：エージェントのID time：時刻 step：シミュレーションステップ数 agent_type：エージェントの属性を示す値 x, y, z：エージェントの位置座標 current_link：エージェントが存在するリンクのID なお、「結果ファイル」には他にもcsvデータが出力されますが、artisoc Cloudのシステム仕様により出力されるインプットデータや一時ファイルであるため、取得は不要です。"
  },
  "articles/SimulationExecutionPlayer.html": {
    "href": "articles/SimulationExecutionPlayer.html",
    "title": "歩行シミュレーション実行 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "歩行シミュレーション実行 ここでは、歩行シミュレーションモデルを実行するための方法を記載します。 実行手順 シミュレーション実行条件を設定後、シミュレーション実行ボタンを押し、シミュレーションを実行します。"
  },
  "articles/SimulationPreparation.html": {
    "href": "articles/SimulationPreparation.html",
    "title": "歩行シミュレーション実行準備 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "歩行シミュレーション実行準備 ここでは、歩行シミュレーションモデルをartisoc Cloudにインストールした後の実行準備の方法を記載します。 実行準備手順 artisoc Cloudにモデルをインポート後、画面左上コントロールパネルから、シミュレーションの実行条件を設定します。具体的には、下記の項目を指定します。 シミュレーション開始時刻（整数値） 何時からシミュレーションを開始するかを整数値で指定します。 シミュレーション終了時刻（実数値） 何時までのシミュレーション実行とするかを実数値で指定します。 例えば、「8.1」を指定した場合、8時6分まで、「8.2」を指定した場合、8時12分までの実行となります。 1ステップあたりの秒数 1秒間に何回計算するかを設定します。 「0.5秒/ステップ」：シミュレーション内のエージェントがシミュレーション内の時間で0.5秒に1回計算、判断を行います。 「1秒/ステップ」：シミュレーション内のエージェントがシミュレーション内の時間で1秒に1回計算、判断を行います。 1ステップあたりの秒数を細かくするとエージェントの行動を細かく表現できますが、シミュレーション内の計算負荷が高くなるため、シミュレーションの実行時間が長くなります。 イベント有無 シミュレーション内でイベントを発生させるかを設定します。 「イベントあり」：イベントを想定したシミュレーションが実行されます。 「イベントなし」：イベントが実施されていない、平常時のシミュレーションが実行されます。 曜日 シミュレーションの想定として、平日とするか、土日祝日（休日）とするかを設定します。 「平日」：平日を想定したシミュレーションが実行されます。 「土日祝日」：土日祝日を想定したシミュレーションが実行されます。 広告有無 シミュレーション内で広告の効果を反映するかを設定します。 「広告あり」：イベントの宣伝広告が設置された場合のシミュレーションが実行されます。 「広告なし」：イベントの宣伝広告がない場合のシミュレーションが実行されます。 インプットデータ artisoc Cloudのモデルを読み込むことで、インプットデータとなる歩行ネットワークデータ及びエージェント情報データが自動的に読み込まれます。 歩行ネットワークデータやエージェント情報データを更新したい場合は、下記ページのデータ生成手順を参考にしてください。 参考：歩行ネットワークデータの生成方法 参考：エージェントデータの生成方法"
  },
  "articles/SimulationRuleChange.html": {
    "href": "articles/SimulationRuleChange.html",
    "title": "歩行者の行動ルールの変更 | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "歩行者の行動ルールの変更 ここでは、歩行者の行動ルールを変更したい場合の方法を記載します。 現在の歩行シミュレーションモデルにおける行動ルールは、国土交通省民間ユースケース開発UC22-023「歩行者移動・回遊行動シミュレーション」技術検証レポートを参照ください。 行動ルールの変更手順 エージェントの行動ルールを変更したい場合は、トップ画面で「ルール画面を表示」を行い、ルール編集画面に移ります。 ルール編集画面に移るとpythonエディタが表示されるので、ルールを変更することが可能です。詳細は、artisoc Cloudマニュアル (https://artisoc-cloud.kke.co.jp/documents/manual/index.html) をご参照ください。"
  },
  "index.html": {
    "href": "index.html",
    "title": "UC22-023「歩行者移動・回遊行動シミュレーション」 歩行シミュレーションモデル | PLATEAU-UC22-023 歩行シミュレーションモデル",
    "keywords": "UC22-023「歩行者移動・回遊行動シミュレーション」 歩行シミュレーションモデル 本マニュアルは、国土交通省民間ユースケース開発UC22-023「歩行者移動・回遊行動シミュレーション」における、歩行シミュレーションのモデル（ソースコード）の利用方法及び説明となります。 このモデルは、国土交通省民間ユースケース開発UC22-023「歩行者移動・回遊行動シミュレーション」において、歩行者の移動や回遊行動を模擬するシミュレーションに用いたものであり、歩行者の行動ルールをpythonベースでまとめたものになります。 なお、このモデルは、artisoc Cloudのstandardライセンスで開発可能なモデルであり、同ライセンスでの使用を前提としたマニュアルとなります。 このモデルに関して、artisoc Cloudのacademicライセンス/playerライセンスでは、Webブラウザ上での実行のみが可能で、モデルの編集等はできません。 artisoc Cloudのライセンスについてはartisoc Cloud HP、または参考：artisoc Cloudについてをご覧ください。 artisoc Cloud standardライセンスにおける使用マニュアル インストール方法 歩行シミュレーション実行準備 歩行シミュレーション実行 歩行者の行動ルールの変更 artisoc Cloud academic/playerライセンスにおける使用マニュアル インストール方法 歩行シミュレーション実行 （参考資料） 参考：artisoc Cloudについて 参考：歩行ネットワークデータの生成方法 参考：エージェントデータの生成方法"
  }
}